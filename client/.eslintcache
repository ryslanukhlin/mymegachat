[{"C:\\www\\mymegachat\\client\\src\\index.js":"1","C:\\www\\mymegachat\\client\\src\\App.jsx":"2","C:\\www\\mymegachat\\client\\src\\Component\\AppRouter.jsx":"3","C:\\www\\mymegachat\\client\\src\\route.js":"4","C:\\www\\mymegachat\\client\\src\\Component\\Login.jsx":"5","C:\\www\\mymegachat\\client\\src\\Component\\Register.jsx":"6","C:\\www\\mymegachat\\client\\src\\reducer\\index.js":"7","C:\\www\\mymegachat\\client\\src\\reducer\\userReducer.js":"8","C:\\www\\mymegachat\\client\\src\\reducer\\registerForm.js":"9","C:\\www\\mymegachat\\client\\src\\reducer\\loginForm.js":"10","C:\\www\\mymegachat\\client\\src\\Component\\Home.jsx":"11","C:\\www\\mymegachat\\client\\src\\Component\\User.jsx":"12","C:\\www\\mymegachat\\client\\src\\Component\\Message.jsx":"13","C:\\www\\mymegachat\\client\\src\\Component\\Friends.jsx":"14","C:\\www\\mymegachat\\client\\src\\Component\\Search.jsx":"15","C:\\www\\mymegachat\\client\\src\\Component\\SearchItem.jsx":"16","C:\\www\\mymegachat\\client\\src\\socket.js":"17","C:\\www\\mymegachat\\client\\src\\Component\\MessageItem.jsx":"18"},{"size":578,"mtime":1612521608252,"results":"19","hashOfConfig":"20"},{"size":920,"mtime":1612690246235,"results":"21","hashOfConfig":"20"},{"size":707,"mtime":1612360395966,"results":"22","hashOfConfig":"20"},{"size":948,"mtime":1612622712529,"results":"23","hashOfConfig":"20"},{"size":3304,"mtime":1612294014557,"results":"24","hashOfConfig":"20"},{"size":4013,"mtime":1612288323359,"results":"25","hashOfConfig":"20"},{"size":294,"mtime":1612284337689,"results":"26","hashOfConfig":"20"},{"size":476,"mtime":1612448048281,"results":"27","hashOfConfig":"20"},{"size":929,"mtime":1612282660529,"results":"28","hashOfConfig":"20"},{"size":440,"mtime":1612291320968,"results":"29","hashOfConfig":"20"},{"size":2033,"mtime":1612619601575,"results":"30","hashOfConfig":"20"},{"size":804,"mtime":1612361623417,"results":"31","hashOfConfig":"20"},{"size":1233,"mtime":1612619597666,"results":"32","hashOfConfig":"20"},{"size":812,"mtime":1612362164769,"results":"33","hashOfConfig":"20"},{"size":1414,"mtime":1612690375641,"results":"34","hashOfConfig":"20"},{"size":1481,"mtime":1612533336072,"results":"35","hashOfConfig":"20"},{"size":115,"mtime":1612519581884,"results":"36","hashOfConfig":"20"},{"size":2258,"mtime":1612689188203,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1exj5p7",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\www\\mymegachat\\client\\src\\index.js",[],["80","81"],"C:\\www\\mymegachat\\client\\src\\App.jsx",["82","83"],"C:\\www\\mymegachat\\client\\src\\Component\\AppRouter.jsx",["84","85"],"import React from 'react';\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { PUBLIC_ROUTER, PRIVATE_ROUTER, NOT_PAGE } from '../route';\r\nimport { useSelector } from 'react-redux';\r\nimport Home from \"./Home\";\r\n\r\nconst AppRouter = () => {\r\n    const isAuth = useSelector(state => state.userReducer.isAuth);\r\n\r\n    return isAuth ?\r\n        (\r\n            <Home/>\r\n        )\r\n        :\r\n        (\r\n            <Switch>\r\n                {PUBLIC_ROUTER.map(({path, component}) => (\r\n                    <Route key={path} path={path} exact component={component}/>\r\n                ))}\r\n                <Redirect to='/login' />\r\n            </Switch>\r\n        )\r\n};\r\n\r\nexport default AppRouter;","C:\\www\\mymegachat\\client\\src\\route.js",[],"C:\\www\\mymegachat\\client\\src\\Component\\Login.jsx",["86"],"import React from 'react';\r\nimport '../css/Login.css';\r\nimport { Form, Input, Button, Checkbox, message } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { setForm } from \"../reducer/loginForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setUser} from \"../reducer/userReducer\";\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch();\r\n    const form = useSelector(state => state.loginForm)\r\n    const [rememberMe, setRememberMe] = React.useState(false);\r\n\r\n    const onChangeForm = (event) => {\r\n        const {name, value} = event.target\r\n        dispatch(setForm({\r\n            name,\r\n            value\r\n        }))\r\n    };\r\n\r\n    const login = async () => {\r\n        const response = await fetch('http://localhost:8000/api/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ ...form })\r\n        });\r\n        if (response.status !== 200) return  message.error('invalid username or password');\r\n        const result = await response.json();\r\n        if (rememberMe) localStorage.setItem('token', JSON.stringify(result.token));\r\n        dispatch(setUser(result));\r\n    };\r\n\r\n    return (\r\n        <div className=\"login__wraper\">\r\n            <div className=\"img__wraper\">\r\n                <img\r\n                    src=\"https://img2.goodfon.ru/original/1920x1200/d/d3/kosmos-planety-krasota.jpg\"\r\n                    alt=\"login logo\"\r\n                    className=\"img\"\r\n                />\r\n            </div>\r\n            <div className=\"form__wraper\">\r\n                <Form className=\"form\">\r\n                    <h1>Login</h1>\r\n                    <Form.Item>\r\n                        <Input\r\n                            prefix={<MailOutlined/>}\r\n                            type=\"text\" placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            onChange={onChangeForm}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Input\r\n                            prefix={<LockOutlined/>}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            onChange={onChangeForm}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                            <Checkbox onChange={setRememberMe.bind(this, !rememberMe)}>Remember me</Checkbox>\r\n                        </Form.Item>\r\n\r\n                        <a className=\"form__forgePass\" href=\"\">\r\n                            Forgot password\r\n                        </a>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button onClick={login} className=\"form__btn\" type=\"primary\">\r\n                            Log in\r\n                        </Button>\r\n                        Or <Link to=\"/register\">register now!</Link>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","C:\\www\\mymegachat\\client\\src\\Component\\Register.jsx",["87"],"import React from 'react';\r\nimport {Button, Form, Input, message} from \"antd\";\r\nimport { UserOutlined, LockOutlined, MailOutlined } from '@ant-design/icons';\r\nimport {Link} from \"react-router-dom\";\r\nimport '../css/Register.css';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {setErrorsForm, setForm} from \"../reducer/registerForm\";\r\n\r\nconst Register = () => {\r\n    const dispatch = useDispatch();\r\n    const form = useSelector(state => state.registerForm);\r\n    const errorsForm = useSelector(state => state.registerForm.errorsForm);\r\n\r\n    const onChangeForm = (event) => {\r\n        const {name, value} = event.target\r\n        dispatch(setForm({\r\n            name,\r\n            value\r\n        }))\r\n    };\r\n\r\n    const register = async () => {\r\n        const response = await fetch('http://localhost:8000/api/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ ...form })\r\n        });\r\n        const result = await response.json();\r\n        const obj = {};\r\n        for (const item in errorsForm) {\r\n            obj[item] = {status: false, msg: null};\r\n        }\r\n        if (response.status !== 200) {\r\n            const errors = {};\r\n            result.errors.map((err) => {\r\n                errors[err.param] = { status: 'error', msg: err.msg };\r\n            });\r\n            dispatch(setErrorsForm({ ...obj, ...errors}));\r\n        } else {\r\n            dispatch(setErrorsForm({ ...obj }));\r\n            message.success('registration was successful');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"register__wraper\">\r\n            <Form className=\"register__form\">\r\n                <h1>Register</h1>\r\n                <Form.Item validateStatus={errorsForm.username.status} help={errorsForm.username.msg}>\r\n                    <Input\r\n                        value={form.username}\r\n                        prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        onChange={onChangeForm}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item validateStatus={errorsForm.email.status} help={errorsForm.email.msg}>\r\n                    <Input\r\n                        value={form.email}\r\n                        prefix={<MailOutlined />}\r\n                        type=\"email\" placeholder=\"Email\"\r\n                        name=\"email\"\r\n                        onChange={onChangeForm}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item validateStatus={errorsForm.password.status} help={errorsForm.password.msg}>\r\n                    <Input.Password\r\n                        value={form.password}\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        onChange={onChangeForm}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item validateStatus={errorsForm.repeatPassword.status} help={errorsForm.repeatPassword.msg}>\r\n                    <Input.Password\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"RepeatPassword\"\r\n                        value={form.repeatPassword}\r\n                        name=\"repeatPassword\"\r\n                        onChange={onChangeForm}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button onClick={register} type=\"primary\">Register</Button>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    you have account? <Link to=\"/login\">Login</Link>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;","C:\\www\\mymegachat\\client\\src\\reducer\\index.js",[],"C:\\www\\mymegachat\\client\\src\\reducer\\userReducer.js",[],"C:\\www\\mymegachat\\client\\src\\reducer\\registerForm.js",[],"C:\\www\\mymegachat\\client\\src\\reducer\\loginForm.js",[],"C:\\www\\mymegachat\\client\\src\\Component\\Home.jsx",["88","89","90","91"],"import React from 'react';\r\nimport {Layout, Menu} from \"antd\";\r\nimport {\r\n    DesktopOutlined,\r\n    PieChartOutlined,\r\n    FileOutlined,\r\n    TeamOutlined,\r\n    UserOutlined,\r\n} from '@ant-design/icons';\r\nimport '../css/User.css';\r\nimport {Link, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {PRIVATE_ROUTER} from \"../route\";\r\nimport loginForm from \"../reducer/loginForm\";\r\n\r\nconst Home = () => {\r\n    const [close, setClose] = React.useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <Layout style={{minHeight: '100vh'}}>\r\n                <Layout.Sider  collapsible collapsed={close} onCollapse={setClose.bind(this, !close)}>\r\n                    <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n                        <div className=\"menu__logo\">\r\n                            <h1>MyChat</h1>\r\n                        </div>\r\n                        <Menu.Item icon={<PieChartOutlined />}>\r\n                            <Link to=\"/user\">Mypage</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\r\n                            <Link to=\"/message\">Message</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"3\" icon={<DesktopOutlined />}>\r\n                            <Link to=\"/friends\">Friends</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"4\" icon={<DesktopOutlined />}>\r\n                            <Link to=\"/search\">Search</Link>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Layout.Sider>\r\n                <Layout>\r\n                    <Switch>\r\n                        {PRIVATE_ROUTER.map(({path, component}) => (\r\n                            <Route key={path} exact path={path} component={component}/>\r\n                        ))}\r\n                        <Redirect to='/user' />\r\n                    </Switch>\r\n                </Layout>\r\n            </Layout>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","C:\\www\\mymegachat\\client\\src\\Component\\User.jsx",[],"C:\\www\\mymegachat\\client\\src\\Component\\Message.jsx",[],"C:\\www\\mymegachat\\client\\src\\Component\\Friends.jsx",[],"C:\\www\\mymegachat\\client\\src\\Component\\Search.jsx",["92","93","94","95","96"],"C:\\www\\mymegachat\\client\\src\\Component\\SearchItem.jsx",["97"],"import React from 'react';\r\nimport {Button, Card, Col} from \"antd\";\r\nimport {useSelector} from \"react-redux\";\r\nimport socket from \"../socket\";\r\n\r\nconst SearchItem = ({item}) => {\r\n    const [statusFrend, setStatusFrend] = React.useState(false);\r\n    const user = useSelector(state => state.userReducer.user);\r\n\r\n    React.useEffect(() => {\r\n        user.friends.map(user => {\r\n           if (item._id === user){\r\n               setStatusFrend(true);\r\n           }\r\n        });\r\n    });\r\n\r\n    const addFriend = (id, idFriend) => {\r\n        setStatusFrend(true);\r\n        socket.emit('ADD_FRIEND', {id, idFriend});\r\n    }\r\n\r\n    socket.on('SET_USER', ({id, idFriend}) => {\r\n        if (item._id === id && user._id === idFriend) {\r\n            setStatusFrend(true);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Col xs={24} sm={12} md={8} lg={6} xl={4}>\r\n            <Card\r\n                hoverable\r\n                cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n                actions={[\r\n                    statusFrend ? (\r\n                        <Button>remove frend</Button>\r\n                        ) : (\r\n                        <Button onClick={addFriend.bind(this, user._id, item._id)}>add frend</Button>\r\n                        )\r\n                ]}\r\n            >\r\n                <Card.Meta title={item.username} description={item.email} />\r\n            </Card>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default SearchItem;","C:\\www\\mymegachat\\client\\src\\socket.js",[],"C:\\www\\mymegachat\\client\\src\\Component\\MessageItem.jsx",["98","99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":9,"column":21,"nodeType":"106","endLine":23,"endColumn":6},{"ruleId":"104","severity":1,"message":"107","line":23,"column":8,"nodeType":"108","endLine":23,"endColumn":10,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":3,"column":25,"nodeType":"112","messageId":"113","endLine":3,"endColumn":39},{"ruleId":"110","severity":1,"message":"114","line":3,"column":41,"nodeType":"112","messageId":"113","endLine":3,"endColumn":49},{"ruleId":"115","severity":1,"message":"116","line":71,"column":25,"nodeType":"117","endLine":71,"endColumn":64},{"ruleId":"118","severity":1,"message":"119","line":37,"column":37,"nodeType":"106","messageId":"120","endLine":37,"endColumn":39},{"ruleId":"110","severity":1,"message":"121","line":6,"column":5,"nodeType":"112","messageId":"113","endLine":6,"endColumn":17},{"ruleId":"110","severity":1,"message":"122","line":7,"column":5,"nodeType":"112","messageId":"113","endLine":7,"endColumn":17},{"ruleId":"110","severity":1,"message":"123","line":8,"column":5,"nodeType":"112","messageId":"113","endLine":8,"endColumn":17},{"ruleId":"110","severity":1,"message":"124","line":13,"column":8,"nodeType":"112","messageId":"113","endLine":13,"endColumn":17},{"ruleId":"110","severity":1,"message":"125","line":2,"column":9,"nodeType":"112","messageId":"113","endLine":2,"endColumn":15},{"ruleId":"110","severity":1,"message":"126","line":2,"column":17,"nodeType":"112","messageId":"113","endLine":2,"endColumn":21},{"ruleId":"110","severity":1,"message":"127","line":2,"column":23,"nodeType":"112","messageId":"113","endLine":2,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":10,"column":21,"nodeType":"106","endLine":20,"endColumn":6},{"ruleId":"104","severity":1,"message":"128","line":20,"column":8,"nodeType":"108","endLine":20,"endColumn":10,"suggestions":"129"},{"ruleId":"118","severity":1,"message":"119","line":11,"column":31,"nodeType":"106","messageId":"120","endLine":11,"endColumn":33},{"ruleId":"104","severity":1,"message":"130","line":20,"column":8,"nodeType":"108","endLine":20,"endColumn":10,"suggestions":"131"},{"ruleId":"104","severity":1,"message":"132","line":33,"column":8,"nodeType":"108","endLine":33,"endColumn":10,"suggestions":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["136"],"no-unused-vars","'PRIVATE_ROUTER' is defined but never used.","Identifier","unusedVar","'NOT_PAGE' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'FileOutlined' is defined but never used.","'TeamOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'loginForm' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'Col' is defined but never used.","React Hook React.useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["137"],"React Hook React.useEffect has a missing dependency: 'idRoom'. Either include it or remove the dependency array.",["138"],"React Hook React.useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["139"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [dispatch]",{"range":"148","text":"149"},"Update the dependencies array to be: [user._id]",{"range":"150","text":"151"},"Update the dependencies array to be: [idRoom]",{"range":"152","text":"153"},"Update the dependencies array to be: [userId]",{"range":"154","text":"155"},[808,810],"[dispatch]",[681,683],"[user._id]",[686,688],"[idRoom]",[1176,1178],"[userId]"]